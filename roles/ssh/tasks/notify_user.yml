---
- name: Get public IP
  community.general.ipify_facts:
    timeout: 20
  register: ssh_ipify_result
  retries: 5
  until: "ssh_ipify_result is not failed"
  delay: 2

- name: Restart sshd
  ansible.builtin.service:
    name: sshd
    state: restarted
  when: ssh_public_key is defined

- name: Notify the user
  block:
    - name: Schedule a reboot if required
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: ssh_reboot_required

    - name: Specify the action after user input
      ansible.builtin.set_fact:
        ssh_notify_action: "reboot to install the kernel updates"
      when: ssh_reboot_required.stat.exists

    - name: Specify the action after user input
      ansible.builtin.set_fact:
        ssh_notify_action: "restart the SSH daemon to apply its settings"
      when: not ssh_reboot_required.stat.exists

    - name: Display user instructions
      when: aws
      ansible.builtin.pause:
        prompt: |
          Almost done! Make sure to test your SSH connection in a new terminal window:
          ssh -p {{ ssh_port }} {{ username }}@{{ ssh_ipify_public_ip }} -i .ssh/path-to-your-key

          After ensuring that it works, return to this terminal window and press [Enter]
          Your system will {{ ssh_notify_action }}. You will be logged out automatically

          After a couple of minutes, you should be able to login to Wireguard WebUI in using your username and password
          http://{{ wireguard_host }}

          Since you're running an AWS EC2 instance, you might need to adjust firewall rules to access the WebUI

          If you didn't configure the e-mail functionality during the installation, type `show_2fa` in the CLI after you're
          prompted for an e-mail confirmation in Authelia.

    - name: Display user instructions
      when: ssh_public_key is not defined and not aws
      ansible.builtin.pause:
        prompt: |

          Almost done! Now you need to copy the private SSH key to your host machine
          1. Open a new terminal window

          2. Type the following commands:
          cd
          scp -P 22 root@{{ ssh_ipify_public_ip }}:/tmp/id_ssh_ed25519 .ssh/id_vpn_{{ username }}

          3. Test the SSH key by typing this command:
          ssh -p 22 {{ username }}@{{ ssh_ipify_public_ip }} -i .ssh/id_vpn_{{ username }}
          Make sure the password prompt says `Enter passphrase for key` and not `{{ username }}@{{ ssh_ipify_public_ip }} password`

          4. After that's done, return to this terminal window and press [Enter].
          Your system will {{ ssh_notify_action }}. You will be logged out automatically

          5. After a couple of minutes, you should be able to login to Wireguard WebUI in using your username and password
          http://{{ wireguard_host }}

          6. If you didn't configure the e-mail functionality during the installation, type `show_2fa` in the CLI after you're
          prompted for an e-mail confirmation in Authelia.

    - name: Display user instructions
      when: ssh_public_key is defined and not aws
      ansible.builtin.pause:
        prompt: |

          Almost done! Make sure to test your SSH connection in a new terminal window:
          ssh -p {{ ssh_port }} {{ username }}@{{ ssh_ipify_public_ip }} -i ~/.ssh/path-to-your-key

          After ensuring that it works, return to this terminal window and press [Enter]
          Your system will {{ ssh_notify_action }}. You will be logged out automatically

          After a couple of minutes, you should be able to login to Wireguard WebUI in using your username and password
          http://{{ wireguard_host }}

          If you didn't configure the e-mail functionality during the installation, type `show_2fa` in the CLI after you're
          prompted for an e-mail confirmation in Authelia.

    - name: Reboot the system if updates are pending
      when: reboot_required.stat.exists
      changed_when: true
      ansible.builtin.command:
        cmd: reboot
