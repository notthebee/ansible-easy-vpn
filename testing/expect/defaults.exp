#!/usr/bin/expect -f
set timeout -1
set env(TERM) vt100
spawn bash $::env(HOME)/ansible-easy-vpn/bootstrap.sh


#process to parse command line arguments into OPTS array
proc parseargs {argc argv} {
    global OPTS
    foreach {key val} $argv {
        switch -exact -- $key {
            "--username"   { set OPTS(username)   $val }
            "--password"   { set OPTS(password)   $val }
            "--domain"   { set OPTS(domain)   $val }
            "--smtp_server"   { set OPTS(smtp_server)   $val }
            "--smtp_login"   { set OPTS(smtp_login)   $val }
            "--smtp_password"   { set OPTS(smtp_password)   $val }
        }
    }
}
parseargs $argc $argv


expect -re ".*Username.*"
send -- "$OPTS(username)\r"

expect -re ".*Password.*"

send -- "$OPTS(password)\r"

expect -re ".*Repeat password:.*"
send -- "$OPTS(password)\r"

expect -re ".*Enable Adguard.*"
send -- "y\r"

expect -re ".*Domain name:.*"
send -- "$OPTS(domain)\r"

expect -re ".*DNS.*"
send -- "\r"

expect {
  "*Are you running this script on an AWS EC2 instance?*" {
    send -- "y\r"
    exp_continue
  }
  "*if you want to generate a new SSH key pair*" {
    send -- "n\r"
  }
}

expect -re ".*Set up e-mail?.*"
send -- "n\r"

expect -re ".*New Vault password:.*"
send -- "$OPTS(password)\r"

expect -re ".*Confirm New Vault password:.*"
send -- "$OPTS(password)\r"

expect "*Would you like to run the playbook now*"
send -- "y\r"

expect "*Vault password"
send -- "$OPTS(password)\r"

expect "*Almost done*"
send \x03
